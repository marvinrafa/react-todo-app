{"version":3,"sources":["components/TodoCounter/TodoCounter.jsx","components/TodoSearch/TodoSearch.jsx","components/TodoList/TodoList.jsx","components/TodoItem/TodoItem.jsx","components/CreateTodoButton/CreateTodoButton.jsx","components/Modal/Modal.jsx","components/TodoForm/TodoForm.jsx","Utils/TodosLoading.jsx","Utils/TodosError.jsx","Utils/EmptyTodos.jsx","components/TodoHeader/TodoHeader.jsx","App/useLocalStorage.jsx","Utils/EmptySearchResults.jsx","components/ChangeAlert/changeAlert.jsx","components/ChangeAlert/useStorageListener.jsx","App/App.jsx","App/useTodos.jsx","index.js"],"names":["TodoCounter","totalTodos","completedTodos","loading","className","TodoSearch","searchValue","setSearchValue","value","placeholder","onChange","event","target","disabled","TodoList","props","renderSource","children","render","error","onError","onLoading","onEmptyTodos","searchedTodos","length","onEmptySearchResults","map","todo","index","TodoItem","icon","faCheck","completed","onClick","onComplete","text","faTimesCircle","onDelete","CreateTodoButton","setOpenModal","prevState","openModal","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","addTodo","React","useState","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","TodoLoader","style","width","margin","viewBox","foregroundColor","backgroundColor","TodosError","textAlign","EmptyTodos","fontSize","TodoHeader","Children","toArray","child","cloneElement","useLocalStorage","itemName","initialValue","setLoading","setError","isSynchronized","setIsSynchronized","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringyfiedItem","synchronizeItem","EmptySearchResult","ChangeAlert","synchronize","storageChange","setStorageChange","window","addEventListener","change","key","console","log","show","toggleShow","useStorageListener","class","App","todos","saveTodos","synchronizeTodos","filter","toLowerCase","includes","completeATodo","newTodos","deleteATodo","splice","push","useTodos","Fragment"],"mappings":"wWAQA,SAASA,EAAT,GAA+D,IAAxCC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,QACjD,OACE,qBAAIC,UAAS,uBAAkBD,GAAW,wBAA1C,4BACkBD,EADlB,OACsCD,EADtC,a,MCPJ,SAASI,EAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,eAAgBJ,EAAW,EAAXA,QAKjD,OACE,uBACEC,UAAU,aACVI,MAAOF,EACPG,YAAY,YACZC,SATe,SAACC,GAClBJ,EAAeI,EAAMC,OAAOJ,QAS1BK,SAAUV,I,MCXhB,SAASW,EAASC,GAEhB,IAAMC,EAAeD,EAAME,UAAYF,EAAMG,OAE7C,OACE,0BAASd,UAAU,qBAAnB,UAEGW,EAAMI,OAASJ,EAAMK,UAErBL,EAAMZ,SAAWY,EAAMM,aAEtBN,EAAMZ,UAAYY,EAAMd,YAAcc,EAAMO,eAE7CP,EAAMd,WAAa,IACjBc,EAAMQ,cAAcC,QACrBT,EAAMU,uBAER,8BACIV,EAAMZ,SACNY,EAAMQ,cAAcG,KAAI,SAACC,EAAMC,GAAP,OAAiBZ,EAAaW,EAAMC,W,0BCjBtE,SAASC,EAASd,GAChB,OACE,qBAAIX,UAAU,WAAd,UAKE,cAAC,IAAD,CACE0B,KAAMC,IACN3B,UAAS,0BAAqBW,EAAMiB,WAAa,sBACjDC,QAASlB,EAAMmB,WAHjB,oBAOA,mBAAG9B,UAAS,qBAAgBW,EAAMiB,WAAa,wBAA/C,SACGjB,EAAMoB,OAET,cAAC,IAAD,CACEL,KAAMM,IACNhC,UAAU,mBACV6B,QAASlB,EAAMsB,SAHjB,kB,MCnBN,SAASC,EAAiBvB,GAIxB,OACE,wBAAQX,UAAU,mBAAmB6B,QAAS,WAH9ClB,EAAMwB,cAAa,SAACC,GAAD,OAAgBA,MAGnC,mBACMzB,EAAM0B,UAAY,OAAM,O,MCLlC,SAASC,EAAT,GAA8B,IAAbzB,EAAY,EAAZA,SACf,OAAO0B,IAASC,aACd,qBAAKxC,UAAU,kBAAf,SAAkCa,IAClC4B,SAASC,eAAe,U,iBCqCbC,MAzCf,YAA8C,IAA1BC,EAAyB,EAAzBA,QAAST,EAAgB,EAAhBA,aAAgB,EACHU,IAAMC,SAAS,IADZ,mBACpCC,EADoC,KACtBC,EADsB,KAiB3C,OACE,uBAAMC,SAXa,SAAC1C,GACpBA,EAAM2C,iBACNN,EAAQG,GACRZ,GAAa,IAQb,UACE,iDACA,0BACE7B,SARc,SAACC,GACnByC,EAAgBzC,EAAMC,OAAOJ,QAQzBA,MAAO2C,EACP1C,YAAY,wBAEd,sBAAKL,UAAU,2BAAf,UACE,wBACEmD,KAAK,SACLtB,QAzBa,WACnBM,GAAa,IAyBPnC,UAAU,yCAHZ,sBAOA,wBAAQmD,KAAK,SAASnD,UAAU,sCAAhC,8B,QCxBOoD,EATI,kBACjB,cAAC,IAAD,CACEC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,YAC/BC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,aCNpB,SAASC,IACP,OAAO,mBAAGN,MAAO,CAAEO,UAAW,UAAvB,kCCDT,SAASC,IACP,OACE,mBAAGR,MAAO,CAAEO,UAAW,SAAUE,SAAU,QAA3C,gDCFJ,SAASC,EAAT,GAA4C,IAAtBlD,EAAqB,EAArBA,SAAUd,EAAW,EAAXA,QAC9B,OACE,iCAGG8C,IAAMmB,SAASC,QAAQpD,GAAUS,KAAI,SAAC4C,GAAD,OACpCrB,IAAMsB,aAAaD,EAAO,CAAEnE,QAASA,S,WC6C9BqE,MAlDf,SAAyBC,EAAUC,GAAe,IAAD,EACjBzB,IAAMC,UAAS,GADE,mBACxC/C,EADwC,KAC/BwE,EAD+B,OAErB1B,IAAMC,SAAS,MAFM,mBAExC/B,EAFwC,KAEjCyD,EAFiC,OAIH3B,IAAMC,UAAS,GAJZ,mBAIxC2B,EAJwC,KAIxBC,EAJwB,OAMvB7B,IAAMC,SAASwB,GANQ,mBAMxCK,EANwC,KAMlCC,EANkC,KA+C/C,OAvCA/B,IAAMgC,WAAU,WACdC,YAAW,WACT,IACE,IACIC,EADEC,EAAmBC,aAAaC,QAAQb,GAGzCW,EAKHD,EAAaI,KAAKC,MAAMJ,IAHxBC,aAAaL,QAAQP,EAAUc,KAAKE,UAAUf,IAC9CS,EAAaT,GAKfM,EAAQG,GACRR,GAAW,GAEXG,GAAkB,GAClB,MAAO3D,GACPyD,EAASzD,MAEV,OAEF,CAAC0D,IAgBG,CAAEE,OAAMW,SAdE,SAACC,GAChB,IACE,IAAMC,EAAkBL,KAAKE,UAAUE,GACvCN,aAAaL,QAAQP,EAAUmB,GAC/BZ,EAAQW,GACR,MAAOxE,GACPyD,EAASzD,KAQYhB,UAASgB,QAAO0E,gBAJjB,WACtBlB,GAAW,GACXG,GAAkB,MC9CtB,SAASgB,EAAT,GAA6C,IAAhBxF,EAAe,EAAfA,YAC3B,OACE,oBAAGmD,MAAO,CAAEO,UAAW,SAAUE,SAAU,QAA3C,8CACoC5D,EADpC,O,MCAJ,SAASyF,EAAT,GAAuC,IAAD,ECFtC,SAA4BC,GAAc,IAAD,EACG/C,IAAMC,UAAS,GADlB,mBAChC+C,EADgC,KACjBC,EADiB,KAevC,OAZAC,OAAOC,iBAAiB,WAAW,SAACC,GACf,aAAfA,EAAOC,MACTC,QAAQC,IAAI,4BACZN,GAAiB,OASd,CAAEO,KAAMR,EAAeS,WALX,WACjBR,GAAiB,GACjBF,MDT2BW,CADO,EAAfX,aACbS,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,WAEd,OAAID,EAEA,qBAAKG,MAAM,mBAAX,SACE,sBAAKA,MAAM,YAAX,UACE,mBAAGA,MAAM,aAAT,SACE,uEAEF,mBAAGA,MAAM,aAAT,wGAIA,yBAAQA,MAAM,eAAe3E,QAAS,kBAAMyE,KAA5C,yBACc,wBAAQE,MAAM,cAAd,4BAMb,KE6DIC,MArEf,WAAgB,IAAD,ECbf,WAAoB,MAQdrC,EAAgB,WAAY,IALxBsC,EAHU,EAGhB/B,KACUgC,EAJM,EAIhBrB,SACAvF,EALgB,EAKhBA,QACAgB,EANgB,EAMhBA,MACiB6F,EAPD,EAOhBnB,gBAPgB,EAUoB5C,IAAMC,SAAS,IAVnC,mBAUX5C,EAVW,KAUEC,EAVF,OAYgB0C,IAAMC,UAAS,GAZ/B,mBAYXT,EAZW,KAYAF,EAZA,KAaZrC,EAAiB4G,EAAMG,QAAO,SAACtF,GAAD,QAAYA,EAAKK,aAAWR,OAC1DvB,EAAa6G,EAAMtF,OAEnBD,EAAgBuF,EAAMG,QAAO,SAACtF,GAAD,OACjCA,EAAKQ,KAAK+E,cAAcC,SAAS7G,EAAY4G,kBAmC/C,MAAO,CACL/G,QAASA,EACTgB,MAAOA,EACPlB,WAAYA,EACZC,eAAgBA,EAChBI,YAAaA,EACbC,eAAgBA,EAChBgB,cAAeA,EACf6F,cAxCoB,SAACd,GACrB,IAAMe,EAAQ,YAAOP,GACrBO,EAASf,GAAKtE,WAAY,EAE1B+E,EAAUM,IAqCVC,YA3BkB,SAAChB,GACnB,IAAMe,EAAQ,YAAOP,GACrBO,EAASE,OAAOjB,EAAK,GAErBS,EAAUM,IAwBVrE,QAnCc,SAACb,GACf,IAAMkF,EAAQ,YAAOP,GACrBO,EAASG,KAAK,CAAExF,WAAW,EAAOG,KAAMA,IAExC4E,EAAUM,IAgCV5E,YACAF,eACAyE,oBDrCES,GAbFtG,EAFW,EAEXA,MACAhB,EAHW,EAGXA,QACAoB,EAJW,EAIXA,cACA6F,EALW,EAKXA,cACAE,EANW,EAMXA,YACA7E,EAPW,EAOXA,UACAF,EARW,EAQXA,aACAtC,EATW,EASXA,WACAC,EAVW,EAUXA,eACAI,EAXW,EAWXA,YACAC,EAZW,EAYXA,eACAyC,EAbW,EAaXA,QACAgE,EAdW,EAcXA,iBAGF,OACE,eAAC,IAAMU,SAAP,WAEE,eAACvD,EAAD,CAAYhE,QAASA,EAArB,UACE,cAAC,EAAD,CAAaF,WAAYA,EAAYC,eAAgBA,IACrD,cAAC,EAAD,CAAYI,YAAaA,EAAaC,eAAgBA,OAExD,cAAC,EAAD,CACEY,MAAOA,EACPhB,QAASA,EACToB,cAAeA,EACfjB,YAAaA,EACbL,WAAYA,EACZmB,QAAS,kBAAM,cAAC2C,EAAD,KACf1C,UAAW,kBAAM,cAAC,EAAD,KACjBC,aAAc,kBAAM,cAAC2C,EAAD,KACpBxC,qBAAsB,kBAAM,cAACqE,EAAD,CAAmBxF,YAAaA,KAE5DY,OAAQ,SAACS,EAAMC,GAAP,OACN,cAAC,EAAD,CAEEO,KAAMR,EAAKQ,KACXH,UAAWL,EAAKK,UAChBE,WAAY,kBAAMkF,EAAcxF,IAChCS,SAAU,kBAAMiF,EAAY1F,KAJvBA,MAoBVa,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUO,QAASA,EAAST,aAAcA,MAG9C,cAAC,EAAD,CAAkBA,aAAcA,EAAcE,UAAWA,IAEzD,cAACsD,EAAD,CAAaC,YAAagB,QE5EhCrE,IAASzB,OAAO,cAAC,EAAD,IAAS2B,SAASC,eAAe,W","file":"static/js/main.061e5cba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoCounter.css\";\r\n\r\n// const estilos = {\r\n//   color: \"red\",\r\n//   backgroundColor: \"yellow\",\r\n// };\r\n\r\nfunction TodoCounter({ totalTodos, completedTodos, loading }) {\r\n  return (\r\n    <h2 className={`TodoCounter  ${loading && \"TodoCounter--loading\"}`}>\r\n      Has completado {completedTodos} de {totalTodos} Tareas\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport { TodoCounter };\r\n","import React from \"react\";\r\nimport \"./TodoSearch.css\";\r\n\r\nfunction TodoSearch({ searchValue, setSearchValue, loading }) {\r\n  const searchTodo = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"TodoSearch\"\r\n      value={searchValue}\r\n      placeholder=\"Buscar...\"\r\n      onChange={searchTodo}\r\n      disabled={loading}\r\n    ></input>\r\n  );\r\n}\r\n\r\nexport { TodoSearch };\r\n","import React from \"react\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList(props) {\r\n  //Independientemente venga desde render prop o render function\r\n  const renderSource = props.children || props.render;\r\n\r\n  return (\r\n    <section className=\"todoList-container\">\r\n      {/* Hubo un errror */}\r\n      {props.error && props.onError()}\r\n      {/* Cargando */}\r\n      {props.loading && props.onLoading()}\r\n      {/* No hay todos */}\r\n      {!props.loading && !props.totalTodos && props.onEmptyTodos()}\r\n      {/* No se han encontrado en la busqueda */}\r\n      {props.totalTodos > 0 &&\r\n        !props.searchedTodos.length &&\r\n        props.onEmptySearchResults()}\r\n      {/* Mapeando los todos ya cuando cargan */}\r\n      <ul>\r\n        {!props.loading &&\r\n          props.searchedTodos.map((todo, index) => renderSource(todo, index))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport { TodoList };\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TodoItem(props) {\r\n  return (\r\n    <li className=\"TodoItem\">\r\n      {/* && Es un short circuit evaluation\r\n          if(condition){\r\n            (this part will execute)\r\n      } */}\r\n      <FontAwesomeIcon\r\n        icon={faCheck}\r\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\r\n        onClick={props.onComplete}\r\n      >\r\n        âˆš\r\n      </FontAwesomeIcon>\r\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\r\n        {props.text}\r\n      </p>\r\n      <FontAwesomeIcon\r\n        icon={faTimesCircle}\r\n        className=\"Icon Icon-delete\"\r\n        onClick={props.onDelete}\r\n      >\r\n        x\r\n      </FontAwesomeIcon>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport { TodoItem };\r\n","import React from \"react\";\r\nimport \"./CreateTodoButton.css\";\r\n\r\nfunction CreateTodoButton(props) {\r\n  const toggleModal = () => {\r\n    props.setOpenModal((prevState) => !prevState);\r\n  };\r\n  return (\r\n    <button className=\"CreateTodoButton\" onClick={() => toggleModal()}>\r\n      {`${props.openModal ? \"Ã—\" : \"+\"}`}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport { CreateTodoButton };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalBackground\">{children}</div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n\r\nexport { Modal };\r\n","import React from \"react\";\r\nimport \"./TodoForm.css\";\r\n\r\nfunction TodoForm({ addTodo, setOpenModal }) {\r\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n\r\n  const handleCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    addTodo(newTodoValue);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const changeValue = (event) => {\r\n    setNewTodoValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Nueva tarea:</label>\r\n      <textarea\r\n        onChange={changeValue}\r\n        value={newTodoValue}\r\n        placeholder=\"Escribe tu tarea...\"\r\n      ></textarea>\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCancel}\r\n          className=\"TodoForm-button TodoForm-button-cancel\"\r\n        >\r\n          Cancelar\r\n        </button>\r\n        <button type=\"submit\" className=\"TodoForm-button TodoForm-button-add\">\r\n          AÃ±adir\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport { BulletList } from \"react-content-loader\";\r\n\r\nconst TodoLoader = () => (\r\n  <BulletList\r\n    style={{ width: \"95%\", margin: \"0px auto\" }}\r\n    viewBox=\"0 0 150 140\"\r\n    foregroundColor=\"#6d9886\"\r\n    backgroundColor=\"#7EB5A6\"\r\n  ></BulletList>\r\n);\r\n\r\nexport default TodoLoader;\r\n","import React from \"react\";\r\n\r\nfunction TodosError() {\r\n  return <p style={{ textAlign: \"center\" }}>Ha ocurrido un error</p>;\r\n}\r\n\r\nexport { TodosError };\r\n","import React from \"react\";\r\n\r\nfunction EmptyTodos() {\r\n  return (\r\n    <p style={{ textAlign: \"center\", fontSize: \"20px\" }}>\r\n      Crea tus tareas haciendo clic en +\r\n    </p>\r\n  );\r\n}\r\n\r\nexport { EmptyTodos };\r\n","import React from \"react\";\r\n\r\nfunction TodoHeader({ children, loading }) {\r\n  return (\r\n    <header>\r\n      {/* //Ayuda para que clone element entienda cuantos elementos vienen\r\n        //Convirtiendolos en array mapeable, React.cloneElement, solo clona uno */}\r\n      {React.Children.toArray(children).map((child) =>\r\n        React.cloneElement(child, { loading: loading })\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport { TodoHeader };\r\n","import React from \"react\";\r\n\r\n//Custom react hook\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(null);\r\n  //Para sincronizar las ventanas\r\n  const [isSynchronized, setIsSynchronized] = React.useState(true);\r\n\r\n  const [item, setItem] = React.useState(initialValue);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        let parsedItem;\r\n\r\n        if (!localStorageItem) {\r\n          //LOCAL storage solo guarda string\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          parsedItem = initialValue;\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        }\r\n\r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n        //Diciendo que ya estamos sincronizados\r\n        setIsSynchronized(true);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }, 1000);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSynchronized]);\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      const stringyfiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringyfiedItem);\r\n      setItem(newItem);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const synchronizeItem = () => {\r\n    setLoading(true);\r\n    setIsSynchronized(false);\r\n  };\r\n  return { item, saveItem, loading, error, synchronizeItem };\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React from \"react\";\r\n\r\nfunction EmptySearchResult({ searchValue }) {\r\n  return (\r\n    <p style={{ textAlign: \"center\", fontSize: \"20px\" }}>\r\n      No se han encontrado tareas con \"{searchValue}\"\r\n    </p>\r\n  );\r\n}\r\n\r\nexport { EmptySearchResult };\r\n","import React from \"react\";\r\nimport { useStorageListener } from \"./useStorageListener\";\r\nimport \"./changeAlert.css\";\r\n\r\nfunction ChangeAlert({ synchronize }) {\r\n  const { show, toggleShow } = useStorageListener(synchronize);\r\n\r\n  if (show) {\r\n    return (\r\n      <div class=\"alert-background\">\r\n        <div class=\"alert-box\">\r\n          <p class=\"alert-text\">\r\n            <strong>Se han detectado nuevos cambios</strong>\r\n          </p>\r\n          <p class=\"alert-text\">\r\n            Al parecer has realizado una version mas reciente con cambios en los TODOS en\r\n            otra ventana\r\n          </p>\r\n          <button class=\"alert-button\" onClick={() => toggleShow()}>\r\n            Sincronizar <strong class=\"reload-icon\">âŸ³</strong>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport { ChangeAlert };\r\n","import React from \"react\";\r\n\r\nfunction useStorageListener(synchronize) {\r\n  const [storageChange, setStorageChange] = React.useState(false);\r\n\r\n  window.addEventListener(\"storage\", (change) => {\r\n    if (change.key === \"TODOS_V1\") {\r\n      console.log(\"Hubo cambios en TODOS_V1\");\r\n      setStorageChange(true);\r\n    }\r\n  });\r\n\r\n  const toggleShow = () => {\r\n    setStorageChange(false);\r\n    synchronize();\r\n  };\r\n\r\n  return { show: storageChange, toggleShow: toggleShow };\r\n}\r\n\r\nexport { useStorageListener };\r\n","//import \"./App.css\";\nimport React from \"react\";\nimport { TodoCounter } from \"../components/TodoCounter/TodoCounter.jsx\";\nimport { TodoSearch } from \"../components/TodoSearch/TodoSearch.jsx\";\nimport { TodoList } from \"../components/TodoList/TodoList.jsx\";\nimport { TodoItem } from \"../components/TodoItem/TodoItem.jsx\";\nimport { CreateTodoButton } from \"../components/CreateTodoButton/CreateTodoButton\";\nimport { Modal } from \"../components/Modal/Modal.jsx\";\nimport TodoForm from \"../components/TodoForm/TodoForm.jsx\";\nimport TodoLoader from \"../Utils/TodosLoading.jsx\";\nimport { TodosError } from \"../Utils/TodosError.jsx\";\nimport { EmptyTodos } from \"../Utils/EmptyTodos.jsx\";\nimport { TodoHeader } from \"../components/TodoHeader/TodoHeader.jsx\";\nimport { useTodos } from \"./useTodos.jsx\";\nimport { EmptySearchResult } from \"../Utils/EmptySearchResults.jsx\";\nimport { ChangeAlert } from \"../components/ChangeAlert/changeAlert.jsx\";\n\nfunction App() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeATodo,\n    deleteATodo,\n    openModal,\n    setOpenModal,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    addTodo,\n    synchronizeTodos,\n  } = useTodos();\n\n  return (\n    <React.Fragment>\n      {/* Todo header le comparte las props usando react.children y react cloneelement */}\n      <TodoHeader loading={loading}>\n        <TodoCounter totalTodos={totalTodos} completedTodos={completedTodos} />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n      </TodoHeader>\n      <TodoList\n        error={error}\n        loading={loading}\n        searchedTodos={searchedTodos}\n        searchValue={searchValue}\n        totalTodos={totalTodos}\n        onError={() => <TodosError />}\n        onLoading={() => <TodoLoader />}\n        onEmptyTodos={() => <EmptyTodos />}\n        onEmptySearchResults={() => <EmptySearchResult searchValue={searchValue} />}\n        //Usando las render Props\n        render={(todo, index) => (\n          <TodoItem\n            key={index}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeATodo(index)}\n            onDelete={() => deleteATodo(index)}\n          />\n        )}\n      >\n        {/* Usando render Function */}\n        {/* {(todo, index) => (\n          <TodoItem\n            key={index}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeATodo(index)}\n            onDelete={() => deleteATodo(index)}\n          />\n        )} */}\n      </TodoList>\n\n      {openModal && (\n        <Modal>\n          <TodoForm addTodo={addTodo} setOpenModal={setOpenModal}></TodoForm>\n        </Modal>\n      )}\n      <CreateTodoButton setOpenModal={setOpenModal} openModal={openModal} />\n\n      <ChangeAlert synchronize={synchronizeTodos} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\n//Otros custom hook. No usaremos context porque la app no lo necesita\r\nfunction useTodos() {\r\n  //Llamando custom hook\r\n  const {\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n    loading,\r\n    error,\r\n    synchronizeItem: synchronizeTodos,\r\n  } = useLocalStorage(\"TODOS_V1\", []);\r\n\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n  // Para modal\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\r\n  const totalTodos = todos.length;\r\n\r\n  const searchedTodos = todos.filter((todo) =>\r\n    todo.text.toLowerCase().includes(searchValue.toLowerCase())\r\n  );\r\n\r\n  const completeATodo = (key) => {\r\n    const newTodos = [...todos];\r\n    newTodos[key].completed = true;\r\n    //Causando rerender de componentes por el estado de react\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    newTodos.push({ completed: false, text: text });\r\n    //Causando rerender de componentes por el estado de react\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const deleteATodo = (key) => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(key, 1);\r\n    //Causando rerender de componentes por el estado de react\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  //Hook Antes de renderizar. Si no se le pasa el array de parametro, se ejecuta\r\n  //Cada vez que se va a renderizar un componente\r\n  //Array vacio, solo se ejecuta una vez\r\n  //Le pasamos un .lenght de todos para que se renderice cuando cambie\r\n  // React.useEffect(() => {\r\n  //   console.log(\"use effect\");\r\n  // }, [totalTodos]);\r\n\r\n  //Hook inmediatamente despues de renderizado\r\n  // React.useLayoutEffect\r\n\r\n  return {\r\n    loading: loading,\r\n    error: error,\r\n    totalTodos: totalTodos,\r\n    completedTodos: completedTodos,\r\n    searchValue: searchValue,\r\n    setSearchValue: setSearchValue,\r\n    searchedTodos: searchedTodos,\r\n    completeATodo: completeATodo,\r\n    deleteATodo: deleteATodo,\r\n    addTodo,\r\n    openModal,\r\n    setOpenModal,\r\n    synchronizeTodos,\r\n  };\r\n}\r\n\r\nexport { useTodos };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}